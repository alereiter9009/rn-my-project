When displaying content, run into issue with the layout of views. Found out the default behaviour of react-native is column as opposed to row. 
Struggled in resizing image to fit the desired view, found out a way around it by defining width and height "null" and resizeMode "stretch". 
When applying styles ran into the issue of having to figure out how to apply multiple styles to one single component. Fixed with the use of arrays of objects. 
When coding the MainInfoScreen that worked with an API, couldn't manage to display the data properly. Had to google it to find out i needed to use JSON.stringify.Also had to make a few changed to the fetch method with the use of react hooks.  
Had to research how to apply multiple inline styles to Text components, learned the concept of nesting them with the desired styling. 
stackNavigator wasn't working after having worked in the past, research to find out there was an update and its name changed. Uninstalled everything and installed, updated the names to fix the issue. 
Had to research how to style stackNavigatorHeader, found out I was using the wrong object name. 
Had to research how to redirect user to URL links on default browser, found out the best way was using Linking method. 
Had to create a customised component in order to decrease the amount of typed code, passing props proved to be tricky at first. 
Unfortunately I was unable to find an API that would supply me with the data that I am looking for, for the remaining two screens of my app called CultureAspects and FunFacts. Had to research a database to use in order to fetch such data and display it on those screens. 
Has struggled to manage to create an appropriate formatted JSON file in order to import data to database. Reading the documentation as well as using a json formatter tool coupled by using a website for JSON parsing helped me solve that issue.
Having difficulty installing modules required for connecting my application to the database of firebase. Going through their docs and troubleshooting on google. 
Building the android build proved to be tricky at first, after some research noticed I had to modify the app.json and add a few details there that were missing. 
When trying to do the same for IOS, the icon image didn't match the IOS requirements, transparecy had to be removed, but afterwards it was required to publish the app for the app store, so I don't intend to build the IPA file anymore as this app is not suited for publishing on that store, as it uses images whose rights i do not own. 
Decided to do my best to ensure google maps was working, so tried getting the APIkey but ran into a problem when fetching the android hashes, keytool was not being recognised. Had to troubleshoot, add the environment paths and run cmd as administrator to make it work. 
Tried building the app for IOS, after quite a lot of errors, finally came into a stalemate where I am unable to proceed any further, as I have to pay a membership to Apple of 99 dollars in order to be able to continue further. So I am afraid I won't have an IOS build. 

TESTING:
XIAOMI MI A2: 
During testing on android with the apk file, google maps didn't seem to work anymore, only when testing it locally. After checking the documentation, I've learned I must own an API key for it. In the end, I've acquired it after running into some issues. More information under troubleshooting chapter. 
XIAOMI REDMI NOTE 8:
The scaling of the uppermost image on the homescreen wasn't applied appropriately, therefore I will be required to re-do the screen utilizing flexBox alongside with image style properties such as reSize to scale the images appropriately to the parent views height and width. 
Honour View 20:
Screen with higher resolution caused Text components of the screen "About" to be on the same line as opposed in two different centered lines. This was fixed using a line break, and nesting the text components on each other. 
Also profile picture wasn't centered on that device. This was fixed using alignSelf on image style object. 
MainInfoScreen API content displayed incorrectly. "Time" text component wasn't displayed at the end of the View, instead on the same line as the first Text component "Capital". This was fixed using justifyContent 'center' coupled with flexWrap on style object. 